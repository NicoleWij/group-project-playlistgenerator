{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karolina\\\\Documents\\\\GitHub\\\\group-project-playlistgenerator\\\\src\\\\js\\\\views\\\\playlistView.js\";\nimport React from 'react';\nimport '../../css/playlistView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistView(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlistMenu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonBack\",\n        onClick: e => {\n          window.location.hash = \"#myPlaylists\";\n        },\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middlebox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleText\",\n          onClick: e => props.resetName(),\n          children: \"\\uD83D\\uDD89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          type: \"text\",\n          className: \"titleText\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"playlisttable\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), props.playlist.songs.map(song => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"name\",\n                className: \"playButton\",\n                onClick: e => {\n                  props.playOrPause(song);\n                },\n                children: song === props.currentSong ? \"‚óº\" : \"‚ñ∂\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.title) + (song.explicit_lyrics ? \"üÖ¥\" : \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.artist.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.album.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(song.duration / 60).toFixed(0), \":\", addZero(song.duration % 60)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, song.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbox\",\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlaylistView;\n\nfunction addZero(number) {\n  return number < 10 ? \"0\" + number : number;\n}\n\nfunction tooLong(string) {\n  return string.length > 20 ? string.slice(0, 40) + \"...\" : string;\n}\n\nexport default PlaylistView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistView\");","map":{"version":3,"sources":["C:/Users/Karolina/Documents/GitHub/group-project-playlistgenerator/src/js/views/playlistView.js"],"names":["React","PlaylistView","props","e","window","location","hash","resetName","name","playlist","songs","map","song","playOrPause","currentSong","tooLong","title","explicit_lyrics","artist","album","duration","toFixed","addZero","id","number","string","length","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/playlistView.css';\r\n\r\nfunction PlaylistView(props) {\r\n    return (\r\n        <div className=\"playlistMenu\">\r\n            <div className=\"leftbox\">\r\n                <button className=\"buttonBack\" onClick={e => {\r\n                    window.location.hash = \"#myPlaylists\"\r\n                }}>‚Üê</button>\r\n            </div>\r\n\r\n            <div className=\"middlebox\">\r\n                <div className=\"topr\">\r\n                    <div className=\"titleText\" onClick={e => props.resetName()}>&#128393;</div>\r\n                    <div type=\"text\" className=\"titleText\"  >{props.name}</div>\r\n                    <div className=\"spacing\"></div>\r\n                </div>\r\n\r\n                <table className=\"playlisttable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Song</td>\r\n                            <td>Artist</td>\r\n                            <td>Album</td>\r\n                            <td>Length</td>\r\n                        </tr>\r\n                        {props.playlist.songs.map(song => {\r\n                            return (\r\n                                <tr key={song.id}>\r\n                                    <td id=\"name\" className=\"playButton\" onClick={e => {\r\n                                        props.playOrPause(song);\r\n                                    }}>{song === props.currentSong ? \"‚óº\" : \"‚ñ∂\"}</td>\r\n                                    <td>{tooLong(song.title) + (song.explicit_lyrics ? \"üÖ¥\" : \"\")}</td>\r\n                                    <td>{tooLong(song.artist.name)}</td>\r\n                                    <td>{tooLong(song.album.title)}</td>\r\n                                    <td>{(song.duration / 60).toFixed(0)}:{addZero(song.duration % 60)}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"rightbox\">  </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction addZero(number) {\r\n    return number < 10 ? \"0\" + number : number;\r\n}\r\n\r\nfunction tooLong(string) {\r\n    return string.length > 20 ? string.slice(0, 40) + \"...\" : string;\r\n}\r\n\r\n\r\n\r\nexport default PlaylistView;"]},"metadata":{},"sourceType":"module"}