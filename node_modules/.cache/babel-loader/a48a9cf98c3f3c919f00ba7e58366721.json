{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicole\\\\Desktop\\\\Projekt grupp 28\\\\playlistgenerator\\\\src\\\\js\\\\views\\\\generateGenreView.js\";\nimport React, { Component } from 'react';\nimport '../../css/generateGenre.css';\nimport '../../css/button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GenerateGenreView(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonNext\",\n        disabled: !(props.totalPercent == 1),\n        onClick: e => {\n          window.location.hash = \"#generateArtists\";\n        },\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonBack\",\n        onClick: e => {\n          window.location.hash = \"#generateStart\";\n        },\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreTitle\",\n        children: [\"What genres are you interested in? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 56\n        }, this), (props.totalPercent * 100).toFixed(0) + \"%/100%\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => props.genres.map(genre => {\n            props.setGenre(genre.radio, 0, genre.name), buttonPressed(genre.id, genre.name);\n          }),\n          className: \"generateAButton\",\n          disabled: props.totalPercent == 0,\n          children: [\"Changed your mind? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 44\n          }, this), \" Clear your choices here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), props.genres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"generateView\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: genre.img,\n        className: \"generateImgGenre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: genre.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            e = value(genre.id, genre.name), props.setGenre(genre.radio, e, genre.name);\n          },\n          type: \"range\",\n          id: genre.id,\n          min: \"0\",\n          max: \"100\",\n          step: \"20\",\n          defaultValue: \"0\",\n          disabled: props.totalPercent * 100 === 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: genre.name,\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percent\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, genre.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GenerateGenreView;\n\nfunction buttonPressed(range, genre) {\n  document.getElementById(range).value = 0;\n  document.getElementById(genre).innerHTML = 0;\n}\n\nfunction value(range, genre) {\n  var x = document.getElementById(range).value;\n  document.getElementById(genre).innerHTML = x;\n  return x;\n}\n\nexport { GenerateGenreView };\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateGenreView\");","map":{"version":3,"sources":["C:/Users/Nicole/Desktop/Projekt grupp 28/playlistgenerator/src/js/views/generateGenreView.js"],"names":["React","Component","GenerateGenreView","props","totalPercent","e","window","location","hash","toFixed","genres","map","genre","setGenre","radio","name","buttonPressed","id","img","value","range","document","getElementById","innerHTML","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../css/generateGenre.css';\r\nimport '../../css/button.css';\r\n\r\nfunction GenerateGenreView(props) {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"content\">\r\n                <button className=\"buttonNext\" disabled={!(props.totalPercent == 1)} onClick={e => { window.location.hash = \"#generateArtists\" }}>→</button>\r\n                <button className=\"buttonBack\" onClick={e => { window.location.hash = \"#generateStart\" }}>←</button>\r\n                <div className=\"genreTitle\">\r\n                    What genres are you interested in? <br></br>\r\n                    {(props.totalPercent * 100).toFixed(0) + \"%/100%\"} <br></br>\r\n                    <button onClick={e => props.genres.map((genre) => { props.setGenre(genre.radio, 0, genre.name), buttonPressed(genre.id, genre.name) })}\r\n                        className={\"generateAButton\"}\r\n                        disabled={props.totalPercent == 0}>\r\n                        Changed your mind? <br></br> Clear your choices here\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {props.genres.map(genre =>\r\n                <span className=\"generateView\" key={genre.id}  >\r\n                    <img src={genre.img} className=\"generateImgGenre\"></img>\r\n                    <div>{genre.name}</div>\r\n                    <div className=\"slide\">\r\n                        <input onChange={e => { e = value(genre.id, genre.name), props.setGenre(genre.radio, e, genre.name) }}\r\n                            type=\"range\"\r\n                            id={genre.id}\r\n                            min=\"0\" max=\"100\"\r\n                            step=\"20\"\r\n                            defaultValue=\"0\"\r\n                            disabled={((props.totalPercent * 100) === 100)}></input>\r\n                        <div id={genre.name}>0</div><div className=\"percent\">%</div>\r\n                    </div>\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction buttonPressed(range, genre) {\r\n    document.getElementById(range).value = 0;\r\n    document.getElementById(genre).innerHTML = 0;\r\n}\r\n\r\nfunction value(range, genre) {\r\n    var x = document.getElementById(range).value;\r\n    document.getElementById(genre).innerHTML = x;\r\n    return x;\r\n}\r\n\r\nexport { GenerateGenreView };"]},"metadata":{},"sourceType":"module"}