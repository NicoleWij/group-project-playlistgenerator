{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karolina\\\\Documents\\\\GitHub\\\\group-project-playlistgenerator\\\\src\\\\js\\\\views\\\\playlistView.js\";\nimport React from 'react';\nimport '../../css/playlistView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistView(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlistMenu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middlebox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titletext\",\n          children: \"\\uD83D\\uDD89 Playlist 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"savecontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"playlisttable\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), props.songs.map(song => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"name\",\n                className: \"playButton\",\n                onClick: e => {\n                  props.playOrPause(song);\n                },\n                children: song === props.currentSong ? \"â—¼\" : \"â–¶\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.title) + (song.explicit_lyrics ? \"ðŸ…´\" : \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.artist.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tooLong(song.album.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(song.duration / 60).toFixed(0), \":\", addZero(song.duration % 60)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbox\",\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlaylistView;\n\nfunction addZero(number) {\n  return number < 10 ? \"0\" + number : number;\n}\n\nfunction tooLong(string) {\n  return string.length > 20 ? string.slice(0, 40) + \"...\" : string;\n}\n\nexport default PlaylistView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistView\");","map":{"version":3,"sources":["C:/Users/Karolina/Documents/GitHub/group-project-playlistgenerator/src/js/views/playlistView.js"],"names":["React","PlaylistView","props","songs","map","song","e","playOrPause","currentSong","tooLong","title","explicit_lyrics","artist","name","album","duration","toFixed","addZero","number","string","length","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/playlistView.css';\r\n\r\nfunction PlaylistView(props) {\r\n    return (\r\n        <div className=\"playlistMenu\">\r\n            <div className=\"leftbox\"></div>\r\n\r\n            <div className=\"middlebox\">\r\n                <div className=\"topr\">\r\n                    <div className=\"titletext\">&#128393; Playlist 1</div>\r\n                    <div className=\"spacing\"></div>\r\n                    <div className=\"savecontainer\"><button className=\"save\">Save</button></div>\r\n                </div>\r\n\r\n                <table className=\"playlisttable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Song</td>\r\n                            <td>Artist</td>\r\n                            <td>Album</td>\r\n                            <td>Length</td>\r\n                        </tr>\r\n                        {props.songs.map(song => {\r\n                            return (\r\n                                <tr>\r\n                                    <td id=\"name\" className=\"playButton\" onClick={e => {\r\n                                        props.playOrPause(song);\r\n                                    }}>{song === props.currentSong ? \"â—¼\" : \"â–¶\"}</td>\r\n                                    <td>{tooLong(song.title) + (song.explicit_lyrics ? \"ðŸ…´\" : \"\")}</td>\r\n                                    <td>{tooLong(song.artist.name)}</td>\r\n                                    <td>{tooLong(song.album.title)}</td>\r\n                                    <td>{(song.duration / 60).toFixed(0)}:{addZero(song.duration % 60)}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"rightbox\">  </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction addZero(number) {\r\n    return number < 10 ? \"0\" + number : number;\r\n}\r\n\r\nfunction tooLong(string) {\r\n    return string.length > 20 ? string.slice(0, 40) + \"...\" : string;\r\n}\r\n\r\n\r\n\r\nexport default PlaylistView;"]},"metadata":{},"sourceType":"module"}