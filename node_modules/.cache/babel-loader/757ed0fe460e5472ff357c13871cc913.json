{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karolina\\\\Documents\\\\GitHub\\\\group-project-playlistgenerator\\\\src\\\\js\\\\presenters\\\\playlistPresenter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PlaylistView, ChangeName } from '../views/playlistView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistPresenter(props) {\n  _s();\n\n  const [playlist, setPlaylist] = React.useState(props.model.currentPlaylist);\n  const [currentSong, setCurrentSong] = React.useState(props.pmodel.currentSong);\n  const [name, setName] = React.useState(null);\n  const [changeName, setChangeName] = React.useState(false);\n  React.useEffect(() => {\n    setChangeName(false);\n\n    const obs = () => {\n      setPlaylist(props.model.currentPlaylist);\n      setCurrentSong(props.pmodel.currentSong);\n\n      if (props.model.currentPlaylist !== null) {\n        setName(props.model.currentPlaylist.name);\n      }\n    };\n\n    props.model.addObserver(obs);\n    props.pmodel.addObserver(obs);\n    return () => {\n      return props.model.removeObserver(obs), props.pmodel.removeObserver(obs);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(name), !changeName || /*#__PURE__*/_jsxDEV(ChangeName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this), playlist === null || /*#__PURE__*/_jsxDEV(PlaylistView, {\n      playlist: playlist,\n      name: name,\n      playOrPause: song => {\n        props.pmodel.setCurrentSong(song);\n      },\n      currentSong: currentSong,\n      setPlaylistName: name => props.model.setPlaylistName(name),\n      changeName: () => setChangeName(!changeName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlaylistPresenter, \"SpHhjcMrgb/fXD6pimFfTQk9S9o=\");\n\n_c = PlaylistPresenter;\nexport default PlaylistPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistPresenter\");","map":{"version":3,"sources":["C:/Users/Karolina/Documents/GitHub/group-project-playlistgenerator/src/js/presenters/playlistPresenter.js"],"names":["React","PlaylistView","ChangeName","PlaylistPresenter","props","playlist","setPlaylist","useState","model","currentPlaylist","currentSong","setCurrentSong","pmodel","name","setName","changeName","setChangeName","useEffect","obs","addObserver","removeObserver","console","log","song","setPlaylistName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,uBAAvC;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAeH,KAAK,CAACI,KAAN,CAAYC,eAA3B,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACO,QAAN,CAAeH,KAAK,CAACQ,MAAN,CAAaF,WAA5B,CAAtC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACO,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BhB,KAAK,CAACO,QAAN,CAAe,KAAf,CAApC;AAEAP,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBD,IAAAA,aAAa,CAAC,KAAD,CAAb;;AACA,UAAME,GAAG,GAAG,MAAM;AACdZ,MAAAA,WAAW,CAACF,KAAK,CAACI,KAAN,CAAYC,eAAb,CAAX;AACAE,MAAAA,cAAc,CAACP,KAAK,CAACQ,MAAN,CAAaF,WAAd,CAAd;;AACA,UAAIN,KAAK,CAACI,KAAN,CAAYC,eAAZ,KAAgC,IAApC,EAA0C;AACtCK,QAAAA,OAAO,CAACV,KAAK,CAACI,KAAN,CAAYC,eAAZ,CAA4BI,IAA7B,CAAP;AACH;AACJ,KAND;;AAOAT,IAAAA,KAAK,CAACI,KAAN,CAAYW,WAAZ,CAAwBD,GAAxB;AACAd,IAAAA,KAAK,CAACQ,MAAN,CAAaO,WAAb,CAAyBD,GAAzB;AACA,WAAO,MAAM;AAAE,aAAOd,KAAK,CAACI,KAAN,CAAYY,cAAZ,CAA2BF,GAA3B,GAAiCd,KAAK,CAACQ,MAAN,CAAaQ,cAAb,CAA4BF,GAA5B,CAAxC;AAA0E,KAAzF;AACH,GAZD,EAYG,EAZH;AAcA,sBACI;AAAA,eACKG,OAAO,CAACC,GAAR,CAAYT,IAAZ,CADL,EAEK,CAACE,UAAD,iBAAe,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFpB,EAGKV,QAAQ,KAAK,IAAb,iBAAqB,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,QAAxB;AAClB,MAAA,IAAI,EAAEQ,IADY;AAElB,MAAA,WAAW,EAAGU,IAAD,IAAU;AAAEnB,QAAAA,KAAK,CAACQ,MAAN,CAAaD,cAAb,CAA4BY,IAA5B;AAAmC,OAF1C;AAGlB,MAAA,WAAW,EAAEb,WAHK;AAIlB,MAAA,eAAe,EAAGG,IAAD,IAAUT,KAAK,CAACI,KAAN,CAAYgB,eAAZ,CAA4BX,IAA5B,CAJT;AAKlB,MAAA,UAAU,EAAE,MAAMG,aAAa,CAAC,CAACD,UAAF;AALb;AAAA;AAAA;AAAA;AAAA,YAH1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAhCQZ,iB;;KAAAA,iB;AAkCT,eAAeA,iBAAf","sourcesContent":["import React from 'react';\r\nimport {PlaylistView, ChangeName} from '../views/playlistView';\r\n\r\nfunction PlaylistPresenter(props) {\r\n    const [playlist, setPlaylist] = React.useState(props.model.currentPlaylist);\r\n    const [currentSong, setCurrentSong] = React.useState(props.pmodel.currentSong);\r\n    const [name, setName] = React.useState(null);\r\n    const [changeName, setChangeName] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setChangeName(false)\r\n        const obs = () => {\r\n            setPlaylist(props.model.currentPlaylist)\r\n            setCurrentSong(props.pmodel.currentSong)\r\n            if (props.model.currentPlaylist !== null) {\r\n                setName(props.model.currentPlaylist.name)\r\n            }\r\n        };\r\n        props.model.addObserver(obs);\r\n        props.pmodel.addObserver(obs);\r\n        return () => { return props.model.removeObserver(obs), props.pmodel.removeObserver(obs) };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {console.log(name)}\r\n            {!changeName || <ChangeName />}\r\n            {playlist === null || <PlaylistView playlist={playlist}\r\n                name={name}\r\n                playOrPause={(song) => { props.pmodel.setCurrentSong(song) }}\r\n                currentSong={currentSong}\r\n                setPlaylistName={(name) => props.model.setPlaylistName(name)}\r\n                changeName={() => setChangeName(!changeName)} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistPresenter;"]},"metadata":{},"sourceType":"module"}