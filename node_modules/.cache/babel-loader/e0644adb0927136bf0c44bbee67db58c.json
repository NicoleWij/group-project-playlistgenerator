{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ander_gmwjmao\\\\OneDrive\\\\Dokument\\\\GitHub\\\\TW\\\\TW1\\\\group-project-playlistgenerator\\\\src\\\\js\\\\presenters\\\\generatedPlaylistPresenter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport GeneratedPlaylistView from '../views/generatedPlaylistView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GeneratedPlaylistPresenter(props) {\n  _s();\n\n  const [songs, setSongs] = React.useState(props.pmodel.songs);\n  const [name, setName] = React.useState(props.pmodel.playlistName);\n  const [currentSong, setCurrentSong] = React.useState(props.pmodel.currentSong);\n  React.useEffect(() => {\n    const obs = () => {\n      setSongs(props.pmodel.songs);\n      setName(props.pmodel.playlistName);\n      setCurrentSong(props.pmodel.currentSong);\n    };\n\n    props.pmodel.addObserver(obs);\n    return () => props.pmodel.removeObserver(obs);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GeneratedPlaylistView, {\n      songs: songs,\n      playlistName: name,\n      setPlaylistName: name => props.pmodel.setPlaylistName(name),\n      playOrPause: song => {\n        props.pmodel.setCurrentSong(song);\n      },\n      currentSong: currentSong,\n      save: () => props.savePlaylist(props.pmodel)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeneratedPlaylistPresenter, \"CC2i0h19vFlcD9uA0FLlRo6Cfno=\");\n\n_c = GeneratedPlaylistPresenter;\nexport default GeneratedPlaylistPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneratedPlaylistPresenter\");","map":{"version":3,"sources":["C:/Users/ander_gmwjmao/OneDrive/Dokument/GitHub/TW/TW1/group-project-playlistgenerator/src/js/presenters/generatedPlaylistPresenter.js"],"names":["React","GeneratedPlaylistView","GeneratedPlaylistPresenter","props","songs","setSongs","useState","pmodel","name","setName","playlistName","currentSong","setCurrentSong","useEffect","obs","addObserver","removeObserver","setPlaylistName","song","savePlaylist"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;;;AAGA,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAeH,KAAK,CAACI,MAAN,CAAaH,KAA5B,CAA1B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACM,QAAN,CAAeH,KAAK,CAACI,MAAN,CAAaG,YAA5B,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACM,QAAN,CAAeH,KAAK,CAACI,MAAN,CAAaI,WAA5B,CAAtC;AAEAX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClB,UAAMC,GAAG,GAAG,MAAM;AACdT,MAAAA,QAAQ,CAACF,KAAK,CAACI,MAAN,CAAaH,KAAd,CAAR;AACAK,MAAAA,OAAO,CAACN,KAAK,CAACI,MAAN,CAAaG,YAAd,CAAP;AACAE,MAAAA,cAAc,CAACT,KAAK,CAACI,MAAN,CAAaI,WAAd,CAAd;AACH,KAJD;;AAKAR,IAAAA,KAAK,CAACI,MAAN,CAAaQ,WAAb,CAAyBD,GAAzB;AACA,WAAO,MAAMX,KAAK,CAACI,MAAN,CAAaS,cAAb,CAA4BF,GAA5B,CAAb;AACH,GARD,EAQG,EARH;AAUA,sBACI;AAAA,2BACK,QAAC,qBAAD;AAAuB,MAAA,KAAK,EAAEV,KAA9B;AACG,MAAA,YAAY,EAAEI,IADjB;AAEG,MAAA,eAAe,EAAGA,IAAD,IAAUL,KAAK,CAACI,MAAN,CAAaU,eAAb,CAA6BT,IAA7B,CAF9B;AAGG,MAAA,WAAW,EAAGU,IAAD,IAAU;AAAEf,QAAAA,KAAK,CAACI,MAAN,CAAaK,cAAb,CAA4BM,IAA5B;AAAmC,OAH/D;AAIG,MAAA,WAAW,EAAEP,WAJhB;AAKG,MAAA,IAAI,EAAE,MAAMR,KAAK,CAACgB,YAAN,CAAmBhB,KAAK,CAACI,MAAzB;AALf;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA3BQL,0B;;KAAAA,0B;AA8BT,eAAeA,0BAAf","sourcesContent":["import React from 'react';\r\nimport GeneratedPlaylistView from '../views/generatedPlaylistView';\r\n\r\n\r\nfunction GeneratedPlaylistPresenter(props) {\r\n    const [songs, setSongs] = React.useState(props.pmodel.songs);\r\n    const [name, setName] = React.useState(props.pmodel.playlistName);\r\n    const [currentSong, setCurrentSong] = React.useState(props.pmodel.currentSong);\r\n\r\n    React.useEffect(() => {\r\n        const obs = () => {\r\n            setSongs(props.pmodel.songs)\r\n            setName(props.pmodel.playlistName)\r\n            setCurrentSong(props.pmodel.currentSong)\r\n        };\r\n        props.pmodel.addObserver(obs);\r\n        return () => props.pmodel.removeObserver(obs);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {<GeneratedPlaylistView songs={songs}\r\n                playlistName={name}\r\n                setPlaylistName={(name) => props.pmodel.setPlaylistName(name)}\r\n                playOrPause={(song) => { props.pmodel.setCurrentSong(song) }}\r\n                currentSong={currentSong}\r\n                save={() => props.savePlaylist(props.pmodel)}\r\n            />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GeneratedPlaylistPresenter;"]},"metadata":{},"sourceType":"module"}