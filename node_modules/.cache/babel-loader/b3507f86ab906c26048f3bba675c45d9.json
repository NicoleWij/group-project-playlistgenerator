{"ast":null,"code":"import { BASE_URL, API_KEY } from './apiConfig';\nconst SongSource = {\n  // JS object creation literal\n  apiCall(params) {\n    return fetch(BASE_URL + params, {\n      \"method\": \"GET\",\n      // HTTP method\n      \"headers\": {\n        // HTTP headers\n        'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n        'x-rapidapi-key': API_KEY\n      }\n    }).then(response => {\n      if (response.status !== 200) throw \"error \" + response.status;\n      return response;\n    }) // from HTTP response headers to HTTP response data\n    .then(response => response.json());\n  },\n\n  // comma between object entries\n  getSongDetails(id) {\n    return SongSource.apiCall('/track/' + id);\n  },\n\n  getArtistsFromGenre(id) {\n    console.log(id);\n    return SongSource.apiCall(\"/genre/\" + id + \"/artists\");\n  },\n\n  getSongsFromArtist(id) {\n    return SongSource.apiCall(\"/artist/\" + id + \"/top\");\n  },\n\n  searchSongs(params) {\n    return SongSource.apiCall('/search/artist?q=' + new URLSearchParams(params));\n  },\n\n  getRadiosFromGenre(id) {\n    return SongSource.apiCall(\"/genre/\" + id + \"/radios\");\n  },\n\n  getTracklistFromRadio(id) {\n    return SongSource.apiCall(\"/radio/\" + id + \"/tracks\");\n  },\n\n  getTracklistFromArtist(id) {\n    return SongSource.apiCall(\"/artist/\" + id + \"/radio\");\n  },\n\n  getAlbumFromTrack(id) {\n    return SongSource.apiCall(\"/artist/\" + id + \"/radio\");\n  }\n\n};\nexport default SongSource;","map":{"version":3,"sources":["C:/Users/Karolina/Documents/GitHub/group-project-playlistgenerator/src/js/songSource.js"],"names":["BASE_URL","API_KEY","SongSource","apiCall","params","fetch","then","response","status","json","getSongDetails","id","getArtistsFromGenre","console","log","getSongsFromArtist","searchSongs","URLSearchParams","getRadiosFromGenre","getTracklistFromRadio","getTracklistFromArtist","getAlbumFromTrack"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AAEA,MAAMC,UAAU,GAAG;AAAI;AACnBC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACZ,WAAOC,KAAK,CAACL,QAAQ,GAAGI,MAAZ,EAAoB;AAC5B,gBAAU,KADkB;AACE;AAC9B,iBAAW;AAAmB;AAC1B,2BAAmB,kCADZ;AAEP,0BAAkBH;AAFX;AAFiB,KAApB,CAAL,CAMJK,IANI,CAMCC,QAAQ,IAAI;AAAE,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,WAAWD,QAAQ,CAACC,MAA1B;AAAkC,aAAOD,QAAP;AAAiB,KAN/F,EAQH;AARG,KASFD,IATE,CASGC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EATf,CAAP;AAWH,GAbc;;AAaV;AAELC,EAAAA,cAAc,CAACC,EAAD,EAAK;AACf,WAAOT,UAAU,CAACC,OAAX,CAAmB,YAAYQ,EAA/B,CAAP;AACH,GAjBc;;AAmBfC,EAAAA,mBAAmB,CAACD,EAAD,EAAK;AACpBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,WAAOT,UAAU,CAACC,OAAX,CAAmB,YAAYQ,EAAZ,GAAiB,UAApC,CAAP;AACH,GAtBc;;AAwBfI,EAAAA,kBAAkB,CAACJ,EAAD,EAAK;AACnB,WAAOT,UAAU,CAACC,OAAX,CAAmB,aAAaQ,EAAb,GAAkB,MAArC,CAAP;AACH,GA1Bc;;AA4BfK,EAAAA,WAAW,CAACZ,MAAD,EAAS;AAChB,WAAOF,UAAU,CAACC,OAAX,CAAmB,sBACpB,IAAIc,eAAJ,CAAoBb,MAApB,CADC,CAAP;AAEH,GA/Bc;;AAiCfc,EAAAA,kBAAkB,CAACP,EAAD,EAAK;AACnB,WAAOT,UAAU,CAACC,OAAX,CAAmB,YAAYQ,EAAZ,GAAiB,SAApC,CAAP;AACH,GAnCc;;AAqCfQ,EAAAA,qBAAqB,CAACR,EAAD,EAAK;AACtB,WAAOT,UAAU,CAACC,OAAX,CAAmB,YAAYQ,EAAZ,GAAiB,SAApC,CAAP;AACH,GAvCc;;AAyCfS,EAAAA,sBAAsB,CAACT,EAAD,EAAK;AACvB,WAAOT,UAAU,CAACC,OAAX,CAAmB,aAAaQ,EAAb,GAAkB,QAArC,CAAP;AACH,GA3Cc;;AA6CfU,EAAAA,iBAAiB,CAACV,EAAD,EAAK;AAClB,WAAOT,UAAU,CAACC,OAAX,CAAmB,aAAaQ,EAAb,GAAkB,QAArC,CAAP;AACH;;AA/Cc,CAAnB;AAmDA,eAAeT,UAAf","sourcesContent":["import { BASE_URL, API_KEY } from './apiConfig';\r\n\r\nconst SongSource = {   // JS object creation literal\r\n    apiCall(params) {\r\n        return fetch(BASE_URL + params, {\r\n            \"method\": \"GET\",              // HTTP method\r\n            \"headers\": {                  // HTTP headers\r\n                'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\r\n                'x-rapidapi-key': API_KEY\r\n            }\r\n        }).then(response => { if (response.status !== 200) throw \"error \" + response.status; return response })\r\n\r\n            // from HTTP response headers to HTTP response data\r\n            .then(response => response.json());\r\n\r\n    },   // comma between object entries\r\n\r\n    getSongDetails(id) {\r\n        return SongSource.apiCall('/track/' + id);\r\n    },\r\n\r\n    getArtistsFromGenre(id) {\r\n        console.log(id)\r\n        return SongSource.apiCall(\"/genre/\" + id + \"/artists\");\r\n    },\r\n\r\n    getSongsFromArtist(id) {\r\n        return SongSource.apiCall(\"/artist/\" + id + \"/top\");\r\n    },\r\n\r\n    searchSongs(params) {\r\n        return SongSource.apiCall('/search/artist?q='\r\n            + new URLSearchParams(params));\r\n    },\r\n\r\n    getRadiosFromGenre(id) {\r\n        return SongSource.apiCall(\"/genre/\" + id + \"/radios\");\r\n    },\r\n\r\n    getTracklistFromRadio(id) {\r\n        return SongSource.apiCall(\"/radio/\" + id + \"/tracks\");\r\n    },\r\n\r\n    getTracklistFromArtist(id) {\r\n        return SongSource.apiCall(\"/artist/\" + id + \"/radio\");\r\n    },\r\n\r\n    getAlbumFromTrack(id) {\r\n        return SongSource.apiCall(\"/artist/\" + id + \"/radio\");\r\n    }\r\n\r\n};\r\n\r\nexport default SongSource;"]},"metadata":{},"sourceType":"module"}