{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ander\\\\OneDrive\\\\Dokument\\\\GitHub\\\\group-project-playlistgenerator\\\\src\\\\js\\\\views\\\\generateStartView.js\";\nimport React from 'react';\nimport '../../css/generateStartView.css';\nimport '../../css/button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GenerateStartView(props) {\n  console.log(props.currentNumberOfSongs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonNext\",\n        disabled: props.currentNumberOfSongs === 0,\n        onClick: e => {\n          window.location.hash = \"#generateGenre\";\n        },\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonBack\",\n        onClick: e => {\n          window.location.hash = \"#start\";\n        },\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleTextG\",\n        children: \"How many songs would you like in your playlist?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explicitTextG\",\n        children: [\"Allow explicit songs \", ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: e => {\n              props.explicitChosen(!props.explicit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuG\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItemG\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: props.currentNumberOfSongs === 10 ? \"pressedButton10\" : \"button10\",\n          onClick: e => props.numberOfSongsChosen(10),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Short\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), \"10 songs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItemG\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: props.currentNumberOfSongs === 20 ? \"pressedButton20\" : \"button20\",\n          onClick: e => props.numberOfSongsChosen(20),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Medium\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 34\n            }, this), \"20 songs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItemG\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: props.currentNumberOfSongs === 30 ? \"pressedButton30\" : \"button30\",\n          onClick: e => props.numberOfSongsChosen(30),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Long\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 32\n            }, this), \"30 songs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = GenerateStartView;\nexport default GenerateStartView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateStartView\");","map":{"version":3,"sources":["C:/Users/ander/OneDrive/Dokument/GitHub/group-project-playlistgenerator/src/js/views/generateStartView.js"],"names":["React","GenerateStartView","props","console","log","currentNumberOfSongs","e","window","location","hash","explicitChosen","explicit","numberOfSongsChosen"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/generateStartView.css';\r\nimport '../../css/button.css';\r\n\r\nexport function GenerateStartView(props) {\r\n    console.log(props.currentNumberOfSongs)\r\n    return (\r\n        <div>\r\n            <div className=\"random\">\r\n                <button className=\"buttonNext\" disabled={ props.currentNumberOfSongs === 0} onClick={e => { window.location.hash = \"#generateGenre\" }}>→</button>\r\n                <button className=\"buttonBack\" onClick={e => { window.location.hash = \"#start\" }}>←</button>\r\n                <div className=\"titleTextG\">\r\n                    How many songs would you like in your playlist?\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"explicitTextG\">\r\n                    Allow explicit songs {' '}\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\"\r\n                            onChange={e=>{props.explicitChosen(!(props.explicit))}}></input>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"menuG\">\r\n                <div className=\"menuItemG\">\r\n                    <button className={props.currentNumberOfSongs === 10 ? \"pressedButton10\" : \"button10\"} onClick={e => props.numberOfSongsChosen(10)}>\r\n                        <p>Short<br></br>10 songs</p>\r\n                    </button>\r\n                </div>\r\n                <div className=\"menuItemG\">\r\n                    <button className={props.currentNumberOfSongs === 20 ? \"pressedButton20\" : \"button20\"} onClick={e => props.numberOfSongsChosen(20)}>\r\n                        <p>Medium<br></br>20 songs</p>\r\n                    </button>\r\n                </div>\r\n                <div className=\"menuItemG\">\r\n                    <button className={props.currentNumberOfSongs === 30 ? \"pressedButton30\" : \"button30\"} onClick={e => props.numberOfSongsChosen(30)}>\r\n                        <p>Long<br></br>30 songs</p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenerateStartView;"]},"metadata":{},"sourceType":"module"}